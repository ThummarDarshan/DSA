
A left rotation operation on an array shifts each of the array's elements unit to the left. For example, if left rotations are performed on array [1, 2, 3, 4, 5] , then the array would become [3, 4, 5, 1, 2]. Note that the lowest index item moves to the highest index in a rotation. This is called a circular array.

Given an array of integers and a number, , perform left rotations on the array. Return the updated array to be printed as a single line of space-separated integers.

int a[n]: the array to rotate int d: the number of rotations

Input Format

--The first line contains two space-separated integers n and d, the size of and the number of left rotations. --The second line contains n space-separated integers, each an array a[i].

Constraints

1 <= n <= 10^5 1 <= d <= n 1 <= a[i] <= 10^6

Output Format

-- line contains left rotated array

Sample Input 0

5 4
1 2 3 4 5
Sample Output 0

5 1 2 3 4
Explanation 0

When we perform d=4 left rotations, the array undergoes the following sequence of changes: [1, 2, 3, 4 ,5] -> [ 2, 3, 4, 5, 1] -> [3, 4, 5, 1, 2] -> [4, 5, 1, 2, 3] -> [5, 1, 2, 3, 4]


CODE :-
#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;


int main() {
    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   
    int n;
    
    cin>>n;
    
    int a[n],d,temp[n];
    
    cin>>d;
    
    for(int i=0;i<n;i++)
    {
        cin>>a[i];
    }
    
    
    
    for(int i=0;i<(n-d);i++)
    {
        temp[i]=a[d+i];
    }
    
    for(int i=0;i<d;i++)
    {
        temp[n-d+i]=a[i];
    }
    
    for(int i=0;i<n;i++)
    {
        a[i]=temp[i];
    }
    
    for(int i=0;i<n;i++)
    {
      cout<< a[i]<<" ";
    }
    
    return 0;
}
