 Given an integer array nums of length n where all the integers of nums are in the range [1, n] and each integer appears at most twice, return an array of all the integers that appears twice otherwise print -1 for no duplicates.

Input Format

first line contains n
second line contains space separated n number of array elements
Constraints

1 <= n <= 10^5
1 <= a[i] <= n
Each element in nums appears once or twice.
Output Format

prints dupicates numbers
Sample Input 0

3
1 1 2
Sample Output 0

1

CODE :-

#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;


int main() {
    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   
    int n;
    cin>>n;
   // vector<int>a;
    int dup[n],duplicate=0,a[n];
    
    
    for(int i=0 ; i<n ; i++)
    {
        cin>>a[i];
    }
    
    sort(a,a+n) ;
    
    for(int i=0;i<n;i++)
    {
        if(a[i]==a[i+1])
        {
            if(dup[duplicate-1]!=a[i])
            {
                dup[duplicate++]=a[i];
            }
        }
    }
    
    if(duplicate==0)
    {
        cout<<"-1";
    }
    else
    {
        for(int i=0 ; i<duplicate ; i++)
    {
        
        cout<<dup[i]<<" ";
    }
    
    }
    
    
    return 0;
}
